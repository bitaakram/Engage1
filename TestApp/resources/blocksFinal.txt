Blockly.Blocks['entity'] = {
  init: function() {
    this.appendDummyInput()
        .appendField("Entity");
    this.appendStatementInput("NAME")
        .setCheck(null);
    this.setColour(160);
    this.setTooltip('');
    this.setHelpUrl('');
  }
};

Blockly.Blocks['move'] = {
  init: function() {
    this.appendDummyInput()
        .appendField("Move");
    this.appendStatementInput("NAME")
        .setCheck(null);
    this.setOutput(true, null);
    this.setColour(260);
    this.setTooltip('');
    this.setHelpUrl('');
  }
};

Blockly.Blocks['recovery'] = {
  init: function() {
    this.appendDummyInput()
        .appendField("Recovery");
    this.appendStatementInput("NAME")
        .setCheck(null);
    this.setOutput(true, null);
    this.setColour(260);
    this.setTooltip('');
    this.setHelpUrl('');
  }
};

Blockly.Blocks['collision'] = {
  init: function() {
    this.appendDummyInput()
        .appendField("Collision")
        .appendField("With")
        .appendField(new Blockly.FieldDropdown([["Virus","Virus"], ["Person","Person"]]), "NAME");
    this.appendStatementInput("NAME")
        .setCheck(null);
    this.setOutput(true, null);
    this.setColour(260);
    this.setTooltip('');
    this.setHelpUrl('');
  }
};

Blockly.Blocks['inbehavior'] = {
  init: function() {
    this.appendValueInput("NAME")
        .setCheck(null);
    this.setPreviousStatement(true, null);
    this.setNextStatement(true, null);
    this.setColour(260);
    this.setTooltip('');
    this.setHelpUrl('');
  }
};

Blockly.Blocks['age'] = {
  init: function() {
    this.appendDummyInput()
        .appendField("Age")
        .appendField(new Blockly.FieldNumber(0), "NAME");
    this.setInputsInline(true);
    this.setOutput(true, null);
    this.setColour(210);
    this.setTooltip('');
    this.setHelpUrl('');
  }
};

Blockly.Blocks['type'] = {
  init: function() {
    this.appendDummyInput()
        .appendField("Type")
        .appendField(new Blockly.FieldDropdown([["Person","Person"], ["Virus","Virus"]]), "NAME");
    this.setInputsInline(true);
    this.setOutput(true, null);
    this.setColour(210);
    this.setTooltip('');
    this.setHelpUrl('');
  }
};

Blockly.Blocks['color'] = {
  init: function() {
    this.appendDummyInput()
        .appendField("Color")
        .appendField(new Blockly.FieldColour("#3366ff"), "NAME");
    this.setInputsInline(true);
    this.setOutput(true, null);
    this.setColour(210);
    this.setTooltip('');
    this.setHelpUrl('');
  }
};

Blockly.Blocks['forward'] = {
  init: function() {
    this.appendDummyInput()
        .appendField("Forward");
    this.appendValueInput("NAME")
        .setCheck(null);
    this.setInputsInline(true);
    this.setPreviousStatement(true, null);
    this.setNextStatement(true, null);
    this.setColour(290);
    this.setTooltip('');
    this.setHelpUrl('');
  }
};

Blockly.Blocks['backward'] = {
  init: function() {
    this.appendDummyInput()
        .appendField("Backward");
    this.appendValueInput("NAME")
        .setCheck(null);
    this.setInputsInline(true);
    this.setPreviousStatement(true, null);
    this.setNextStatement(true, null);
    this.setColour(290);
    this.setTooltip('');
    this.setHelpUrl('');
  }
};

Blockly.Blocks['turn_left'] = {
  init: function() {
    this.appendDummyInput()
        .appendField("Turn left");
    this.appendValueInput("NAME")
        .setCheck(null);
    this.setInputsInline(true);
    this.setPreviousStatement(true, null);
    this.setNextStatement(true, null);
    this.setColour(290);
    this.setTooltip('');
    this.setHelpUrl('');
  }
};

Blockly.Blocks['turn_right'] = {
  init: function() {
    this.appendDummyInput()
        .appendField("Turn right");
    this.appendValueInput("NAME")
        .setCheck(null);
    this.setInputsInline(true);
    this.setPreviousStatement(true, null);
    this.setNextStatement(true, null);
    this.setColour(290);
    this.setTooltip('');
    this.setHelpUrl('');
  }
};

Blockly.Blocks['gettime'] = {
  init: function() {
    this.appendDummyInput()
        .appendField("Get time");
    this.setInputsInline(true);
    this.setOutput(true, null);
    this.setColour(350);
    this.setTooltip('');
    this.setHelpUrl('');
  }
};

Blockly.Blocks['clock'] = {
  init: function() {
    this.appendDummyInput()
        .appendField("Clock");
    this.setInputsInline(true);
    this.setOutput(true, null);
    this.setColour(350);
    this.setTooltip('');
    this.setHelpUrl('');
  }
};

Blockly.Blocks['create'] = {
  init: function() {
    this.appendDummyInput()
        .appendField("Create")
        .appendField(new Blockly.FieldNumber(0), "NAME")
        .appendField("# of")
        .appendField(new Blockly.FieldDropdown([["People","People"], ["Viruses","Viruses"]]), "Entity");
    this.setInputsInline(true);
    this.setOutput(true, null);
    this.setColour(45);
    this.setTooltip('');
    this.setHelpUrl('');
  }
};

Blockly.Blocks['set'] = {
  init: function() {
    this.appendDummyInput()
        .appendField("Set my")
        .appendField(new Blockly.FieldDropdown([["Color","Color"], ["Age","Age"], ["Type","Type"]]), "NAME")
        .appendField("to");
    this.appendValueInput("NAME")
        .setCheck(null);
    this.setInputsInline(true);
    this.setPreviousStatement(true, null);
    this.setNextStatement(true, null);
    this.setColour(290);
    this.setTooltip('');
    this.setHelpUrl('');
  }
};

Blockly.Blocks['simulation'] = {
  init: function() {
    this.appendDummyInput()
        .appendField("Simulate");
    this.appendStatementInput("NAME")
        .setCheck(null);
    this.setColour(20);
    this.setTooltip('');
    this.setHelpUrl('');
  }
};

Blockly.Blocks['insim'] = {
  init: function() {
    this.appendValueInput("NAME")
        .setCheck(null);
    this.setPreviousStatement(true, null);
    this.setNextStatement(true, null);
    this.setColour(20);
    this.setTooltip('');
    this.setHelpUrl('');
  }
};

Blockly.Blocks['trait_of'] = {
  init: function() {
    this.appendDummyInput()
        .appendField(new Blockly.FieldDropdown([["Color","Color"], ["Age","Age"], ["Type","Type"]]), "Color")
        .appendField("of")
        .appendField(new Blockly.FieldDropdown([["Collidee","Collidee"], ["Me","Me"]]), "NAME");
    this.setOutput(true, null);
    this.setColour(310);
    this.setTooltip('');
    this.setHelpUrl('');
  }
};

Blockly.Blocks['inchar'] = {
  init: function() {
    this.appendValueInput("NAME")
        .setCheck(null);
    this.setPreviousStatement(true, null);
    this.setNextStatement(true, null);
    this.setColour(210);
    this.setTooltip('');
    this.setHelpUrl('');
  }
};

Blockly.Blocks['in1'] = {
  init: function() {
    this.appendValueInput("NAME")
        .setCheck(null);
    this.setPreviousStatement(true, null);
    this.setNextStatement(true, null);
    this.setColour(160);
    this.setTooltip('');
    this.setHelpUrl('');
  }
};

Blockly.Blocks['in_behaviour'] = {
  init: function() {
    this.appendValueInput("NAME")
        .setCheck(null);
    this.setPreviousStatement(true, null);
    this.setNextStatement(true, null);
    this.setColour(260);
    this.setTooltip('');
    this.setHelpUrl('');
  }
};

Blockly.Blocks['characteristics2'] = {
  init: function() {
    this.appendDummyInput()
        .appendField("Characteristics");
    this.appendStatementInput("NAME")
        .setCheck(null);
    this.setOutput(true, null);
    this.setColour(210);
    this.setTooltip('');
    this.setHelpUrl('');
  }
};

Blockly.Blocks['behaviors2'] = {
  init: function() {
    this.appendDummyInput()
        .appendField("Behaviors");
    this.appendStatementInput("NAME")
        .setCheck(null);
    this.setOutput(true, null);
    this.setColour(260);
    this.setTooltip('');
    this.setHelpUrl('');
  }
};